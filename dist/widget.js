(()=>{"use strict";class t{constructor(t){this.album=t?.album?.["#text"],this.artist=t?.artist?.["#text"],this.nowPlaying=!!t?.["@attr"]?.nowplaying,this.title=t?.name;const e=t?.image;Array.isArray(e)?(this.albumArtSmall=e.find((t=>"small"===t?.size))?.["#text"],this.albumArtMedium=e.find((t=>"medium"===t?.size))?.["#text"],this.albumArtLarge=e.find((t=>"large"===t?.size))?.["#text"],this.albumArtExtraLarge=e.find((t=>"extralarge"===t?.size))?.["#text"]):(this.albumArtSmall=null,this.albumArtMedium=null,this.albumArtLarge=null,this.albumArtExtraLarge=null)}equals(t){return!!t&&this.album===t.album&&this.artist===t.artist&&this.title===t.title}}class e{constructor(t){if(this.apiKey=t,!this.apiKey)throw new Error("LastFmService::Constructor - Parameter 'apiKey' was not provided. An API key must be provided.")}async getMostRecentTrack(t){return this.getRecentTracks(t,1)}async getRecentTracks(e,r){if(!e)throw new Error("LastFmService::getRecentTracks - Parameter 'user' cannot be null or undefined.");if(r<1||r>200)throw new Error("LastFmService::getRecentTracks - Parameter 'limit' must be a positive integer with a maximum value of 200.");const i=`https://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user=${e}&limit=${r}&api_key=${this.apiKey}&format=json`;return fetch(i,{mode:"cors",headers:{"Content-Type":"application/json",SameSite:"Strict"}}).then((t=>t.json())).then((e=>{const r=e?.recenttracks?.track?.[0];return new t(r)}))}}class r{constructor(t,r,i){if(!r)throw new Error("NowPlayingWidget::Constructor - Parameter 'user' was not provided. A user must be provided.");if(i<1e4)throw new Error("NowPlayingWidget::Constructor - parameter 'apiPollFrequency' cannot be less than 10 seconds.");this.user=r,this.apiPollFrequency=i,this.lastFmService=new e(t)}set album(t){this.albumElement||(this.albumElement=document.querySelector(".track-album")),this.albumElement&&(this.albumElement.innerText=t)}set artist(t){this.artistElement||(this.artistElement=document.querySelector(".track-artist")),this.artistElement&&(this.artistElement.innerText=t)}set title(t){this.titleElement||(this.titleElement=document.querySelector(".track-title")),this.titleElement&&(this.titleElement.innerText=t)}checkNowPlaying(){this.lastFmService.getMostRecentTrack(this.user).then((t=>{t.nowPlaying&&!t.equals(this.currentTrack)&&(this.currentTrack=t,this.updateTrack(this.currentTrack))})).finally((()=>{setTimeout((()=>this.checkNowPlaying()),this.apiPollFrequency)}))}start(){this.checkNowPlaying()}updateArt(t){document.querySelector("img.track-art").setAttribute("src",t)}updateTrack(t){this.album=t.album,this.artist=t.artist,this.title=t.title,this.updateArt(t.albumArtExtraLarge)}}let i;window.addEventListener("onWidgetLoad",(function(t){const e=t.detail.fieldData,s=e.lastFmApiKey,a=e.lastFmUsername,n=class{static toMilliseconds(t){return 1e3*t}static toSeconds(t){return t/1e3}}.toMilliseconds(e.lastFmApiPollFrequency);i=new r(s,a,n),i.start()}))})();