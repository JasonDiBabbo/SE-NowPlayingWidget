(()=>{"use strict";class t{constructor(t){if(this.artStackElement=t,!this.artStackElement)throw new Error("ArtStack::Constructor - DOM element with class 'art-stack' could not be found.")}set artwork(t){console.log("setting artwork"),this.appendImage(t),1===this.artStackElement.children.length?this.fadeInImage(0):Promise.all([this.fadeOutImage(0),this.fadeInImage(1)]).then((()=>{const t=this.artStackElement.children[0];this.artStackElement.removeChild(t)}))}appendImage(t){const e=document.createElement("img");e.classList.add("art"),e.classList.add("transparent"),e.src=t,this.artStackElement.appendChild(e),this.requestBrowserAnimation(e)}fadeInImage(t){const e=this.artStackElement.children[t];return new Promise((t=>{const r=a=>{"opacity"===a.propertyName&&(e.removeEventListener("transitionend",r),t())};e.addEventListener("transitionend",r),e.classList.remove("transparent")}))}fadeOutImage(t){const e=this.artStackElement.children[t];return new Promise((t=>{const r=a=>{"opacity"===a.propertyName&&(e.removeEventListener("transitionend",r),t())};e.addEventListener("transitionend",r),e.classList.add("transparent")}))}requestBrowserAnimation(t){t.offsetWidth}}class e{constructor(t){this.album=t?.album?.["#text"],this.artist=t?.artist?.["#text"],this.nowPlaying=!!t?.["@attr"]?.nowplaying,this.title=t?.name;const e=t?.image;Array.isArray(e)?(this.albumArtSmall=e.find((t=>"small"===t?.size))?.["#text"],this.albumArtMedium=e.find((t=>"medium"===t?.size))?.["#text"],this.albumArtLarge=e.find((t=>"large"===t?.size))?.["#text"],this.albumArtExtraLarge=e.find((t=>"extralarge"===t?.size))?.["#text"]):(this.albumArtSmall=null,this.albumArtMedium=null,this.albumArtLarge=null,this.albumArtExtraLarge=null)}equals(t){return!!t&&this.album===t.album&&this.artist===t.artist&&this.title===t.title}}class r{constructor(t){if(this.apiKey=t,!this.apiKey)throw new Error("LastFmService::Constructor - Parameter 'apiKey' was not provided. An API key must be provided.")}async getMostRecentTrack(t){return this.getRecentTracks(t,1)}async getRecentTracks(t,r){if(!t)throw new Error("LastFmService::getRecentTracks - Parameter 'user' cannot be null or undefined.");if(r<1||r>200)throw new Error("LastFmService::getRecentTracks - Parameter 'limit' must be a positive integer with a maximum value of 200.");const a=`https://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user=${t}&limit=${r}&api_key=${this.apiKey}&format=json`;return fetch(a,{mode:"cors",headers:{"Content-Type":"application/json",SameSite:"Strict"}}).then((t=>t.json())).then((t=>{const r=t?.recenttracks?.track?.[0];return new e(r)}))}}class a{constructor(e,a,s){if(!a)throw new Error("NowPlayingWidget::Constructor - Parameter 'user' was not provided. A user must be provided.");if(s<1e4)throw new Error("NowPlayingWidget::Constructor - parameter 'apiPollFrequency' cannot be less than 10 seconds.");this.user=a,this.apiPollFrequency=s,this.lastFmService=new r(e);const i=document.querySelector(".art-stack");this.artStack=new t(i)}set album(t){this.albumElement||(this.albumElement=document.querySelector(".track-album")),this.albumElement&&(this.albumElement.innerText=t)}set artist(t){this.artistElement||(this.artistElement=document.querySelector(".track-artist")),this.artistElement&&(this.artistElement.innerText=t)}set title(t){this.titleElement||(this.titleElement=document.querySelector(".track-title")),this.titleElement&&(this.titleElement.innerText=t)}checkNowPlaying(){this.lastFmService.getMostRecentTrack(this.user).then((t=>{t.nowPlaying&&!t.equals(this.currentTrack)&&(this.currentTrack=t,this.updateTrack(this.currentTrack))})).finally((()=>{setTimeout((()=>this.checkNowPlaying()),this.apiPollFrequency)}))}start(){this.checkNowPlaying()}updateTrack(t){this.artStack.artwork=t.albumArtExtraLarge}}let s;window.addEventListener("onWidgetLoad",(function(t){const e=t.detail.fieldData,r=e.lastFmApiKey,i=e.lastFmUsername,n=class{static toMilliseconds(t){return 1e3*t}static toSeconds(t){return t/1e3}}.toMilliseconds(e.lastFmApiPollFrequency);s=new a(r,i,n),s.start()}))})();